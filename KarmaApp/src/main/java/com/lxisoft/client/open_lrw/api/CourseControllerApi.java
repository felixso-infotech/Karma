/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (3.0.0-SNAPSHOT).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.lxisoft.client.open_lrw.api;

import com.lxisoft.client.open_lrw.model.Course;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2019-03-29T12:01:52.955+05:30[Asia/Calcutta]")

@Api(value = "CourseController", description = "the CourseController API")
public interface CourseControllerApi {

    @ApiOperation(value = "getClass", nickname = "getClassUsingGET2", notes = "", response = Course.class, tags={ "course-controller", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = Course.class),
        @ApiResponse(code = 401, message = "Unauthorized"),
        @ApiResponse(code = 403, message = "Forbidden"),
        @ApiResponse(code = 404, message = "Not Found") })
    @RequestMapping(value = "/api/courses/{courseId}",
        produces = "*/*", 
        method = RequestMethod.GET)
    ResponseEntity<Course> getClassUsingGET2(@ApiParam(value = "courseId",required=true) @PathVariable("courseId") String courseId,@ApiParam(value = "") @Valid @RequestParam(value = "details", required = false) Object details,@ApiParam(value = "") @Valid @RequestParam(value = "authenticated", required = false) Boolean authenticated);


    @ApiOperation(value = "postCourse", nickname = "postCourseUsingPOST", notes = "", response = Object.class, tags={ "course-controller", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = Object.class),
        @ApiResponse(code = 201, message = "Created"),
        @ApiResponse(code = 401, message = "Unauthorized"),
        @ApiResponse(code = 403, message = "Forbidden"),
        @ApiResponse(code = 404, message = "Not Found") })
    @RequestMapping(value = "/api/courses",
        produces = "*/*", 
        consumes = "application/json",
        method = RequestMethod.POST)
    ResponseEntity<Object> postCourseUsingPOST(@ApiParam(value = "course" ,required=true )  @Valid @RequestBody Course course,@ApiParam(value = "") @Valid @RequestParam(value = "details", required = false) Object details,@ApiParam(value = "") @Valid @RequestParam(value = "authenticated", required = false) Boolean authenticated);

}
