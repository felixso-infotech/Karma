/**
 * RegisteredUser entity.
 * @author Sanil Kumar p
 */
entity RegisteredUser{
  firstName String,
  lastName String,
  email String,
  createdDate ZonedDateTime,
  phoneNumber String,
  userId String,
  profilePicture Blob,
  coverPhoto Blob,	 
}
/**
 * Activity entity.
 * @author Sarangi Balu A
 */
entity Activity{
	title String,
    description String,
    successMessage String,
    type Type,
    createdDate ZonedDateTime,
    proofType ProofType,
    isMultipleProofsRequired Boolean,
    noOfPages Integer
}
/**
 * IntroductionStory entity.
 * @author Sanil Kumar p
 */
entity IntroductionStory {
story String,
image Blob
}
/**
 * ProofType entity.
 * @author Sarangi Balu A
 */
enum ProofType {
IMAGE,VIDEO,TEXT,PDF,PPT,DOC,XLX
}
/**
 * CommittedActivity entity.
 * @author Sanil Kumar p
 */
entity CommittedActivity{
     description String,
     status Status,
     createdDate ZonedDateTime  
}
/**
 * Type entity.
 * @author Sarangi Balu A
 */
enum Type {
       SINGLE,TEAM
}
/**
 * Status entity.
 * @author Sanil Kumar p
 */
enum Status {
       TODO,INPROGRESS,DONE
}
/**
 * Challenge entity.
 * @author Sarangi Balu A
 */
entity Challenge {
	name String,
    successMessage String,
    createdDate ZonedDateTime    
}
/**
 * CompletedChallenge entity.
 * @author Sanil Kumar p
 */
entity CompletedChallenge {  
    description String,
    createdDate ZonedDateTime    
}
/**
 * Dimension entity.
 * @author Sarangi Balu A
 */
entity Dimension {
 	name String
}
/**
 * Media entity.
 * @author Sanil Kumar p
 */
entity Media{
	fileName String,
	file Blob
}


relationship ManyToOne {
	Activity to Challenge,
    CommittedActivity to RegisteredUser,
    CompletedChallenge to RegisteredUser,
    
}
relationship OneToMany{
	Activity{stories} to IntroductionStory,
    CommittedActivity{activityProofs} to Media,
    CompletedChallenge{proofs} to Media,
    Activity{committededActivities} to CommittedActivity,  
    Challenge{completedChallenges} to CompletedChallenge
    CommittedActivity to CommittedActivity{reference}
}   
relationship ManyToMany {
	Activity to Dimension
}
paginate * with pagination
dto * with mapstruct
service all with serviceImpl